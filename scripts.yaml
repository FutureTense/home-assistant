##########################################
## Hue Lighting Scenes                  ##
##########################################

reset_downstairs_lighting:
  alias: Reset Downstairs Lighting
  sequence:
    - service: light.turn_off
      entity_id: light.all_downstairs_color_lights
#      data:
#        brightness: 150
#        rgb_color: [255,200,118]
#    - delay: '00:00:01'
    - service: scene.turn_on
      data_template:
        entity_id: >-
          {% if states('media_player.living_room_tv') == 'on' and states('sensor.hue_outdoor_motion_sensor_light_level')| int < 250  %}
            scene.tv_lights
          {% else %}
            scene.casual_lighting
          {% endif %}
    - delay: '00:00:01'
    - service: scene.turn_on
      data_template:
        entity_id: >-
          {% if states('media_player.living_room_tv') == 'on' and states('sensor.hue_outdoor_motion_sensor_light_level')| int < 250  %}
            scene.tv_lights
          {% else %}
            scene.casual_lighting
          {% endif %}

downstairs_colorloop:
  alias: Downstairs Color Loop
  sequence:
    - service: light.turn_on
      entity_id: light.all_downstairs_color_lights
      data_template:
        hs_color:
          - "{{ range(360)|random }}"
          - "{{ range(80,101)|random }}"
        brightness: 190
    - delay: '00:00:04'
    - service: light.turn_on
      entity_id: light.all_downstairs_color_lights
      data_template:
        effect: colorloop
        brightness: 190
        transition: 10

increment_light:
  alias: Shelf Lights Dim
  sequence:
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') < 230 %}
           {{ state_attr('light.shelf_lights' , 'brightness') + 25 }}
         {% else %} 255 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') < 230 %}
           {{ state_attr('light.shelf_lights' , 'brightness') + 25 }}
         {% else %} 255 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') < 230 %}
           {{ state_attr('light.shelf_lights' , 'brightness') + 25 }}
         {% else %} 255 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') < 230 %}
           {{ state_attr('light.shelf_lights' , 'brightness') + 25 }}
         {% else %} 255 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') < 230 %}
           {{ state_attr('light.shelf_lights' , 'brightness') + 25 }}
         {% else %} 255 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') < 230 %}
           {{ state_attr('light.shelf_lights' , 'brightness') + 25 }}
         {% else %} 255 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') < 230 %}
           {{ state_attr('light.shelf_lights' , 'brightness') + 25 }}
         {% else %} 255 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') < 230 %}
           {{ state_attr('light.shelf_lights' , 'brightness') + 25 }}
         {% else %} 255 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') < 230 %}
           {{ state_attr('light.shelf_lights' , 'brightness') + 25 }}
         {% else %} 255 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') < 230 %}
           {{ state_attr('light.shelf_lights' , 'brightness') + 25 }}
         {% else %} 255 {% endif %}

decrement_light:
  alias: Shelf Lights Brighten
  sequence:
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') > 25 %}
           {{ state_attr('light.shelf_lights' , 'brightness') - 25 }}
         {% else %} 1 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') > 25 %}
           {{ state_attr('light.shelf_lights' , 'brightness') - 25 }}
         {% else %} 1 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') > 25 %}
           {{ state_attr('light.shelf_lights' , 'brightness') - 25 }}
         {% else %} 1 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') > 25 %}
           {{ state_attr('light.shelf_lights' , 'brightness') - 25 }}
         {% else %} 1 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') > 25 %}
           {{ state_attr('light.shelf_lights' , 'brightness') - 25 }}
         {% else %} 1 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') > 25 %}
           {{ state_attr('light.shelf_lights' , 'brightness') - 25 }}
         {% else %} 1 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') > 25 %}
           {{ state_attr('light.shelf_lights' , 'brightness') - 25 }}
         {% else %} 1 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') > 25 %}
           {{ state_attr('light.shelf_lights' , 'brightness') - 25 }}
         {% else %} 1 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') > 25 %}
           {{ state_attr('light.shelf_lights' , 'brightness') - 25 }}
         {% else %} 1 {% endif %}
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: light.shelf_lights
      data_template:
        brightness: >
         {% if state_attr('light.shelf_lights' , 'brightness') > 25 %}
           {{ state_attr('light.shelf_lights' , 'brightness') - 25 }}
         {% else %} 1 {% endif %}
         
##########################################
## Theater Room AV Resets               ##
##########################################
theater_room_soundbar_reset:
  alias: Theater Room Sound Bar Reset
  sequence:
  - service: remote.turn_on
    entity_id: remote.theater_room_harmony_hub
    data:
      activity: "27555534"

theater_room_harmony_hub_off:
  sequence:
  - service: remote.turn_off
    entity_id: remote.theater_room_harmony_hub
    
##########################################
## TTS Scripts                          ##
##########################################
#TTS Script  
car_lock_car_doors:
  alias: 'Car Lock Car Doors'
  sequence: 
    - service: shell_command.car_lock

car_start_car:
  alias: 'Car Start Car'
  sequence: 
    - service: shell_command.car_start

##########################################
## Garage Door Toggle                   ##
##########################################
toggle_cover:
  alias: 'Garage Door Button'
  sequence:
    - service: homeassistant.turn_on
      entity_id: input_boolean.garage_changed_with_ha
    - service_template: >
        {% if is_state('cover.garage_door_opener', 'open') %}
          cover.close_cover
        {% else %}
          cover.open_cover
        {% endif %}
      entity_id: cover.garage_door_opener

garage_door_open:
  alias: 'Garage Door Open'
  sequence:
    - service: cover.open_cover
      entity_id: cover.garage_door_opener

garage_door_close:
  alias: 'Garage Door Close'
  sequence:
    - service: cover.close_cover
      entity_id: cover.garage_door_opener

##########################################
## Ecobee Mode Settings                 ##
##########################################
ecobee_resume_mode:
  alias: "Resume Ecobee mode"
  sequence:
    - service: climate.ecobee_resume_program
      entity_id:
       - climate.downstairs
       - climate.upstairs

ecobee_home_mode:
  alias: "Ecobee Home Mode"
  sequence:
    - service: climate.set_hold_mode
      entity_id:
       - climate.downstairs
       - climate.upstairs
      data:
        hold_mode: 'home'

ecobee_away_mode:
  alias: "Ecobee Away Mode"
  sequence:
    - service: climate.set_hold_mode
      entity_id:
       - climate.downstairs
       - climate.upstairs
      data:
        hold_mode: 'away'

ecobee_sleep_mode:
  alias: "Ecobee Sleep mode"
  sequence:
    - condition: template
      value_template: "{{ states.climate.downstairs.attributes.climate_mode != 'Sleep' }}"
    - service: climate.set_hold_mode
      entity_id:
       - climate.downstairs
       - climate.upstairs
      data:
        hold_mode: 'sleep'

ecobee_worker_mode:
  alias: "Ecobee Worker Mode"
  sequence:
    - service: climate.set_hold_mode
      entity_id:
       - climate.downstairs
       - climate.upstairs
      data:
        hold_mode: 'smart1'

##########################################
## Harmony scripts                      ##
##########################################
fireplace_toggle:
  alias: 'Fireplace Toggle'
  sequence:
    - service_template: >
        {% if is_state('switch.fireplace', 'on') %}
          switch.turn_off
        {% else %}
          switch.turn_off
        {% endif %}
      entity_id: switch.fireplace

      
##########################################
## For Sending Emails                   ##
##########################################

notify_with_images:
  alias: Notify with Images
  sequence:
  - condition: template
    value_template: "{{ condition }}"
  - service_template: "{{ service }}"
    data_template:
      title: "{{ title }}"
      message: "{{ message }}"
      data:
        images:
          - "{{ imagename }}"

 # The main mockupancy script...
mockupancy:
  sequence:
    # Wait until it is after 6pm and dark to start the routine
    - wait_template: "{{ states.sensor.time.state >= '18:00' and is_state('binary_sensor.dark_outside' , 'on') }}"

    # Check that it Vacation mode is still on
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'on'

    # Pick a random bedtime between 10pm and midnight.
    - service: input_datetime.set_time
      data_template:
        entity_id: input_datetime.mockupancy_bedtime
        time: "{{ (range(22, 23)|random|int) }}:{{ (range(0, 59)|random|int) }}:00"

    # Start the routine, switch on the 'usual' lights
    - service: homeassistant.turn_on
      entity_id:
        - scene.tv_lighting

    # Start scripts to randomise occasional lights
    - service: script.random_master_bedroom
    - service: script.random_kitchen

    # Start scripts to randomise kids' bedtime simulation
    - service: script.random_guest_room
    - service: script.random_ashleys_room

    # 1 hour before bedtime, change lighting as if TV was turned off
    - wait_template: "{{ states('sensor.time') == (((state_attr('input_datetime.mockupancy_bedtime' , 'timestamp')) - (60 * 60))|timestamp_custom('%H:%M', false)) }}"
    - service: homeassistant.turn_on
      entity_id:
        - scene.casual_lighting

    # 20 minutes before bedtime, turn on kitchen lights only
    - wait_template: "{{ states('sensor.time') == (((state_attr('input_datetime.mockupancy_bedtime' , 'timestamp')) - (20 * 60))|timestamp_custom('%H:%M', false)) }}"
    - service: homeassistant.turn_on
      entity_id:
        - scene.morning_lighting

    # Stop kitchen/master bedroom randomisation
    - service: homeassistant.turn_off
      entity_id:
        - script.random_master_bedroom
        - script.random_master_bedroom_loop
        - script.random_kitchen
        - script.random_kitchen_loop

    # At 'bedtime', turn on Master Bedroom for random time between 2 and 15 minutes
    # turn off kitchen, wait 20-30 seconds, turn off living room wait 30-59 seconds,
    # turn on bedroom.
    - wait_template: "{{ states('sensor.time') == (state_attr('input_datetime.mockupancy_bedtime' , 'timestamp')|int|timestamp_custom('%H:%M', False)) }}"
    - service: homeassistant.turn_on
      entity_id: switch.stairwell_light
    - delay: "00:00:{{ (range(15, 59)|random|int) }}"
    - service: homeassistant.turn_off
      entity_id: group.livingroom
    - delay: "00:00:{{ (range(20, 30)|random|int) }}"
    - service: homeassistant.turn_off
      entity_id: group.kitchen
    - delay: "00:00{{ (range(20, 30)|random|int) }}"
    - service: homeassistant.turn_on
      entity_id: light.bedroom_ceiling_light
      data:
        brightness: 80
    - delay: "00:{{ (range(2, 15)|random|int) }}:00"
    - service: homeassistant.turn_off
      entity_id: switch.stairwell_light
    - delay: "00:{{ (range(15, 59)|random|int) }}:00"
    - service: homeassistant.turn_off
      entity_id: light.bedroom_ceiling_light

#    # After a random time between 15 minutes and an hour, turn off the lights
    - delay: "00:{{ (range(15, 30)|random|int) }}:00"
    - service: input_boolean.turn_on
      entity_id: input_boolean.goodnight_switch

    # If light before 7am, switch off lights, stop and loop, if not run a further script first
#    - wait_template: "{{ now().hour == 7 }}"
    - wait_template: "{{ states.sensor.time.state == '07:00' }}"
    - service_template: >
        {% if states('binary_sensor.dark_outside' , 'on') %} script.morning_mockupancy
        {% else %} script.mockupancy_loop {% endif %}


# A further script for if it is still dark in the morning
morning_mockupancy:
  sequence:
    # Check that it Vacation mode is still on
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'on'

    # Wait a random nmber of minutes between 1 and 30 and switch on the morning lights
    - delay: "00:{{ (range(1, 30)|random|int) }}:00"
    - service: homeassistant.turn_on
      entity_id: scene.morning_lighting

    # Wait until it is light, switch off lights and loop
    - wait_template: "{{ is_state('binary_sensor.dark_outside' , 'off') }}"
    - service: script.mockupancy_loop


# Randomising beditmes for the upstairs rooms
random_guest_room:
  sequence:
    # Wait until after 8pm, and create a random delay up to 30 minutes and check if it is dark
#    - wait_template: "{{ now().hour >= 20 }}"
    - wait_template: "{{ states.sensor.time.state >= '20:00' }}"
    - delay: "00:{{ (range(1, 30)|random|int) }}:00"
    - condition: state
      entity_id: binary_sensor.dark_outside
      state: 'on'

    # Switch light on for between 10 and 30 minutes
    - service: homeassistant.turn_on
      entity_id: light.guest_bedroom_lamp
    - delay: "00:{{ (range(10, 30)|random|int) }}:00"
    - service: homeassistant.turn_off
      entity_id: light.guest_bedroom_lamp

random_ashleys_room:
  sequence:
    # Wait until after 9pm, and create a random delay up to 30 minutes and check if it is dark
#    - wait_template: "{{ now().hour >= 21 }}"
    - wait_template: "{{ states.sensor.time.state >= '21:00' }}"
    - delay: "00:{{ (range(1, 30)|random|int) }}:00"
    - condition: state
      entity_id: binary_sensor.dark_outside
      state: 'on'

    # Switch light on for between 10 and 30 minutes
    - service: homeassistant.turn_on
      entity_id: light.ashleys_room_lamp
    - delay: "00:{{ (range(10, 30)|random|int) }}:00"
    - service: homeassistant.turn_off
      entity_id: light.ashleys_room_lamp


# Randomising rooms we're in and out off
random_master_bedroom:
  sequence:
    # Check that it Vacation mode is still on
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'on'

    # Wait a random nmber of minutes between 15 and 90 and switch on
    - delay: "00:{{ (range(15, 90)|random|int) }}:00"
    - service: homeassistant.turn_on
      entity_id: light.bedroom_ceiling_light
      data:
        brightness: 100

    # Wait for between 3 minutes and 9 minutes and switch off
    - delay: "00:{{ (range(3, 9)|random|int) }}:00"
    - service: homeassistant.turn_off
      entity_id: light.bedroom_ceiling_light

    # Loop the script for next time.
    - service: script.random_master_bedroom_loop


random_kitchen:
  sequence:
    # Check that it Vacation mode is still on
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'on'

    # Wait a random nmber of minutes between 15 and 90 and switch on
    - delay: "00:{{ (range(15, 90)|random|int) }}:00"
    - service: homeassistant.turn_on
      entity_id: light.kitchen_island_light
      data:
        brightness: 100

    # Wait for between 3 minutes and 9 minutes and switch off
    - delay: "00:{{ (range(3, 9)|random|int) }}:00"
    - service: homeassistant.turn_off
      entity_id: light.kitchen_island_light

    # Loop the script for next time.
    - service: script.random_kitchen_loop


# Scripts that loop the ones above that need looping
mockupancy_loop:
  sequence:
    # Switch off the lights, and make sure the calling scripts have stopped
    - service: homeassistant.turn_off
      entity_id:
        - group.all_lights
        - script.mockupancy
    - delay: 00:05:00

    # Check that it Vacation mode is still on and restart the script for a new day
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'on'
    - service: script.mockupancy

random_master_bedroom_loop:
  sequence:
    # Stop the calling script
    - service: homeassistant.turn_off
      entity_id: script.random_master_bedroom
    - delay: 00:05:00

    # Check that Vacation mode is on and restart the script
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'on'
    - service: script.random_master_bedroom

random_kitchen_loop:
  sequence:
    # Stop the calling script
    - service: homeassistant.turn_off
      entity_id: script.random_kitchen
    - delay: 00:05:00

    # Check that Vacation mode is on and restart the script
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'on'

##########################################
## Icloud3 Logging                      ##
##########################################
icloud_command_info_logging_toggle:
  alias: 'Write Details to Log File (Toggle)'
  sequence:
    - service: device_tracker.icloud_update
      data:
        account_name: gary_icloud
        command: info logging
    - service: script.random_kitchen